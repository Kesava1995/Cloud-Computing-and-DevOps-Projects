Course-end Project 1
Description
To implement a CI/CD pipeline using AWS services for automating the deployment of a Spring Boot application on Amazon ECS with Docker, integrating CodePipeline, CodeBuild and ECR for seamless updates
Real-time scenario: Imagine a retail company that has a Spring Boot-based inventory management system. The system is used by several departments and is hosted in containers to ensure scalability.
The company wants to reduce the manual intervention required to deploy updates by automating the build and deployment process. By setting up a CI/CD pipeline, developers can push updates to a GitHub repository, automatically triggering a sequence of actions that build, containerize, and deploy the application without downtime. This ensures faster and more reliable system updates, minimizing operational delays.

1. Fork the Spring Boot project GitHub repository and create an ECR to store the Docker images 
2. Modify the build configuration file in the GitHub repository to include the ECR image URI 
3. Create a CodeBuild project to pull code from the GitHub repository 
4. Create an ECS cluster using the Fargate launch type and configure an ECS service to run tasks on the cluster 
5. Deploy the application
6. Configure CodePipeline to trigger on GitHub changes, integrating CodeBuild and ECS for automated deployment 
7. Test and monitor the pipeline execution in AWS CodePipeline
